<%@ Template Language="C#" TargetLanguage="Text" Debug="False"  Inherits="OutputFileCodeTemplate" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Property Name="ClassNamespace" Type="System.String" Category="Options" Default="BusinessObjects" Description="Namespace your class is in. Only used if SingleFileMode is true!" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using CCAIDemo.Entity;
using CCAIDemo.DataAccess;

namespace <%= this.ClassNamespace %>
{
    public class <%= GetClassName(SourceTable) %> : BaseMgr<<%= GetEntityClassName(SourceTable) %>>
	{
        private <%= GetDataAccessClassName(SourceTable) %> <%= "_"+GetDataAccessClassName(SourceTable) %>;

        public <%= GetClassName(SourceTable) %>()
        {
            <%= "_"+GetDataAccessClassName(SourceTable) %> = new <%= GetDataAccessClassName(SourceTable) %>();
        }
    }
 
}

<script runat="template">
// Override the OutputFile property and assign our specific settings to it.
[FileDialog(FileDialogType.Save, Title="Select Output File", Filter="C# Files (*.cs)|*.cs", DefaultExtension=".cs")]
public override string OutputFile
{
    get {return base.OutputFile;}
    set {base.OutputFile = value;}
}
</script>

<script runat="template">
// My methods here.

public string GetClassName(TableSchema table)
{
	if (table.Name.Contains("_"))
	{
		return table.Name.Replace("_","")+"Bll";
	}
	else
	{
		return table.Name+"Bll";
	}
}

public string GetEntityClassName(TableSchema table)
{
    if (table.Name.Contains("_"))
	{
		return table.Name.Replace("_","");
	}
	else
	{
		return table.Name;
	}
}

public string GetDataAccessClassName(TableSchema table)
{
    if (table.Name.Contains("_"))
	{
		return table.Name.Replace("_","")+"DataAccess";
	}
	else
	{
		return table.Name+"DataAccess";
	}
}
</script>